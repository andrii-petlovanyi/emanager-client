{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  comments: [],\n  loading: false\n};\nexport const createComment = createAsyncThunk('comment/createComment', async _ref => {\n  let {\n    postId,\n    comment\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = await axios.post(`/comments/${postId}`, {\n      postId,\n      comment\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getPostComments = createAsyncThunk('comment/getPostComments', async postId => {\n  try {\n    const {\n      data\n    } = await axios.get(`/posts/comments/${postId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const commentSlice = createSlice({\n  name: 'comment',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Создание поста\n    [createComment.pending]: state => {\n      state.loading = true;\n    },\n    [createComment.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments.push(action.payload);\n    },\n    [createComment.rejected]: state => {\n      state.loading = false;\n    },\n    // Получение комментов\n    [getPostComments.pending]: state => {\n      state.loading = true;\n    },\n    [getPostComments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments = action.payload;\n    },\n    [getPostComments.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","comments","loading","createComment","postId","comment","data","post","error","console","log","getPostComments","get","commentSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["/Users/andrepetlovany/Desktop/youtube-src/client-mern-blog/src/redux/features/comment/commentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from '../../../utils/axios'\n\nconst initialState = {\n    comments: [],\n    loading: false,\n}\n\nexport const createComment = createAsyncThunk(\n    'comment/createComment',\n    async ({ postId, comment }) => {\n        try {\n            const { data } = await axios.post(`/comments/${postId}`, {\n                postId,\n                comment,\n            })\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const getPostComments = createAsyncThunk(\n    'comment/getPostComments',\n    async (postId) => {\n        try {\n            const { data } = await axios.get(`/posts/comments/${postId}`)\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const commentSlice = createSlice({\n    name: 'comment',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        // Создание поста\n        [createComment.pending]: (state) => {\n            state.loading = true\n        },\n        [createComment.fulfilled]: (state, action) => {\n            state.loading = false\n            state.comments.push(action.payload)\n        },\n        [createComment.rejected]: (state) => {\n            state.loading = false\n        },\n        // Получение комментов\n        [getPostComments.pending]: (state) => {\n            state.loading = true\n        },\n        [getPostComments.fulfilled]: (state, action) => {\n            state.loading = false\n            state.comments = action.payload\n        },\n        [getPostComments.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n})\n\nexport default commentSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EADO;EAEjBC,OAAO,EAAE;AAFQ,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,CACzC,uBADyC,EAEzC,cAA+B;EAAA,IAAxB;IAAEM,MAAF;IAAUC;EAAV,CAAwB;;EAC3B,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMP,KAAK,CAACQ,IAAN,CAAY,aAAYH,MAAO,EAA/B,EAAkC;MACrDA,MADqD;MAErDC;IAFqD,CAAlC,CAAvB;IAIA,OAAOC,IAAP;EACH,CAND,CAME,OAAOE,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAZwC,CAAtC;AAeP,OAAO,MAAMG,eAAe,GAAGb,gBAAgB,CAC3C,yBAD2C,EAE3C,MAAOM,MAAP,IAAkB;EACd,IAAI;IACA,MAAM;MAAEE;IAAF,IAAW,MAAMP,KAAK,CAACa,GAAN,CAAW,mBAAkBR,MAAO,EAApC,CAAvB;IACA,OAAOE,IAAP;EACH,CAHD,CAGE,OAAOE,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAT0C,CAAxC;AAYP,OAAO,MAAMK,YAAY,GAAGhB,WAAW,CAAC;EACpCiB,IAAI,EAAE,SAD8B;EAEpCd,YAFoC;EAGpCe,QAAQ,EAAE,EAH0B;EAIpCC,aAAa,EAAE;IACX;IACA,CAACb,aAAa,CAACc,OAAf,GAA0BC,KAAD,IAAW;MAChCA,KAAK,CAAChB,OAAN,GAAgB,IAAhB;IACH,CAJU;IAKX,CAACC,aAAa,CAACgB,SAAf,GAA2B,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC1CF,KAAK,CAAChB,OAAN,GAAgB,KAAhB;MACAgB,KAAK,CAACjB,QAAN,CAAeoB,IAAf,CAAoBD,MAAM,CAACE,OAA3B;IACH,CARU;IASX,CAACnB,aAAa,CAACoB,QAAf,GAA2BL,KAAD,IAAW;MACjCA,KAAK,CAAChB,OAAN,GAAgB,KAAhB;IACH,CAXU;IAYX;IACA,CAACS,eAAe,CAACM,OAAjB,GAA4BC,KAAD,IAAW;MAClCA,KAAK,CAAChB,OAAN,GAAgB,IAAhB;IACH,CAfU;IAgBX,CAACS,eAAe,CAACQ,SAAjB,GAA6B,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC5CF,KAAK,CAAChB,OAAN,GAAgB,KAAhB;MACAgB,KAAK,CAACjB,QAAN,GAAiBmB,MAAM,CAACE,OAAxB;IACH,CAnBU;IAoBX,CAACX,eAAe,CAACY,QAAjB,GAA6BL,KAAD,IAAW;MACnCA,KAAK,CAAChB,OAAN,GAAgB,KAAhB;IACH;EAtBU;AAJqB,CAAD,CAAhC;AA8BP,eAAeW,YAAY,CAACW,OAA5B"},"metadata":{},"sourceType":"module"}