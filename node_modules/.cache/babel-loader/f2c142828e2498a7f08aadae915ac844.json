{"ast":null,"code":"var _jsxFileName = \"/Users/andrepetlovany/Desktop/GIT/elx/client/src/pages/MainPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PostItem } from '../components/PostItem';\nimport '../index.css';\nimport { getAllPost } from '../redux/features/post/postSlice';\nimport { AiOutlineKey } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    posts\n  } = useSelector(state => state.post);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [value, setValue] = useState('');\n  const filterPost = posts.filter(post => {\n    return post.model.includes(value);\n  });\n  useEffect(() => {\n    dispatch(getAllPost());\n  }, [dispatch]);\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (!posts.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0438 \\u0432\\u0456\\u0434\\u0441\\u0443\\u0442\\u043D\\u0456\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AiOutlineKey, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u043E\\u0434\\u044C \\u043C\\u043E\\u0434\\u0435\\u043B\\u044C \\u0434\\u043B\\u044F \\u043F\\u043E\\u0448\\u0443\\u043A\\u0443...\",\n        onChange: e => setValue(e.target.value),\n        className: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), (user === null || user === void 0 ? void 0 : user._id) && (filterPost === null || filterPost === void 0 ? void 0 : filterPost.map((post, idx) => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainPage, \"xqfpEIRbXBN7OKksn/mQUuuzipI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","PostItem","getAllPost","AiOutlineKey","MainPage","dispatch","posts","state","post","user","auth","value","setValue","filterPost","filter","model","includes","length","e","target","_id","map","idx"],"sources":["/Users/andrepetlovany/Desktop/GIT/elx/client/src/pages/MainPage.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PostItem } from '../components/PostItem';\nimport '../index.css';\nimport { getAllPost } from '../redux/features/post/postSlice';\nimport { AiOutlineKey } from 'react-icons/ai'\n\n\n\nexport const MainPage = () => {\n    \n    const dispatch = useDispatch()\n    const { posts } = useSelector((state) => state.post)\n    const { user } = useSelector((state) => state.auth)\n\n    const [value, setValue] = useState('')\n\n    const filterPost = posts.filter(post => {\n        return post.model.includes(value)\n    })\n\n    \n    useEffect(() => {\n         dispatch(getAllPost())\n    }, [dispatch])\n    \n    if (!user) {\n        return<div>Авторизуйтесь</div>\n    }\n\n    if (!posts.length) {\n        return <div>Записи відсутні</div>\n    }\n    \n\n    return (\n        <div className='main-page'>\n            <div><AiOutlineKey/><input type='text' placeholder='Вводь модель для пошуку...' onChange={(e) => setValue(e.target.value)} className='search'/></div>\n            {\n                user?._id && filterPost?.map((post, idx) => (\n                    <PostItem key={idx} post={post} />\n                ))\n            }\n            \n\n        </div>\n        )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAO,cAAP;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAIA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAE1B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM;IAAEO;EAAF,IAAYN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7B;EACA,MAAM;IAAEC;EAAF,IAAWT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAA5B;EAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAMe,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAaN,IAAI,IAAI;IACpC,OAAOA,IAAI,CAACO,KAAL,CAAWC,QAAX,CAAoBL,KAApB,CAAP;EACH,CAFkB,CAAnB;EAKAd,SAAS,CAAC,MAAM;IACXQ,QAAQ,CAACH,UAAU,EAAX,CAAR;EACJ,CAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;;EAIA,IAAI,CAACI,IAAL,EAAW;IACP,oBAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAN;EACH;;EAED,IAAI,CAACH,KAAK,CAACW,MAAX,EAAmB;IACf,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAGD,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA,wBAAK,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA,QAAL,eAAoB;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAC,gIAA/B;QAA4D,QAAQ,EAAGC,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAArF;QAAuG,SAAS,EAAC;MAAjH;QAAA;QAAA;QAAA;MAAA,QAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAGQ,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,GAAN,MAAaP,UAAb,aAAaA,UAAb,uBAAaA,UAAU,CAAEQ,GAAZ,CAAgB,CAACb,IAAD,EAAOc,GAAP,kBACzB,QAAC,QAAD;MAAoB,IAAI,EAAEd;IAA1B,GAAec,GAAf;MAAA;MAAA;MAAA;IAAA,QADS,CAAb,CAHR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAtCM;;GAAMlB,Q;UAEQL,W,EACCC,W,EACDA,W;;;KAJRI,Q"},"metadata":{},"sourceType":"module"}