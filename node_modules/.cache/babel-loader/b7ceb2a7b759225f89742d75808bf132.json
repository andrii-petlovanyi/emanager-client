{"ast":null,"code":"var _jsxFileName = \"/Users/andrepetlovany/Desktop/GIT/elx/client/src/pages/RegisterPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkIsAuth, registerUser } from '../redux/features/auth/authSlice';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegisterPage = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    status\n  } = useSelector(state => state.auth);\n  const isAuth = useSelector(checkIsAuth);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (status) {\n      toast(status);\n    }\n\n    if (isAuth) {\n      navigate('/');\n    }\n  }, [status, isAuth, navigate]);\n\n  const handlerSubmit = () => {\n    try {\n      dispatch(registerUser({\n        username,\n        password\n      }));\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-form-title\",\n      children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => e.preventDefault(),\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"\\u0411\\u0430\\u0436\\u0430\\u043D\\u0438\\u0439 \\u043B\\u043E\\u0433\\u0456\\u043D\",\n        className: \"login-form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        className: \"login-form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handlerSubmit,\n          className: \"btn_enter\",\n          children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"link\",\n          children: \"\\u0412\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"CGHfPVzKJwx2BSYxGs437+XwQ+I=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useDispatch","useSelector","checkIsAuth","registerUser","toast","RegisterPage","username","setUsername","password","setPassword","status","state","auth","isAuth","navigate","dispatch","handlerSubmit","error","console","log","e","preventDefault","target","value"],"sources":["/Users/andrepetlovany/Desktop/GIT/elx/client/src/pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkIsAuth, registerUser } from '../redux/features/auth/authSlice';\nimport { toast } from 'react-toastify';\n\nexport const RegisterPage = () => {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const { status } = useSelector((state) => state.auth)\n    const isAuth = useSelector(checkIsAuth)\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (status) {\n            toast(status)\n        }\n        if (isAuth) { navigate('/') }\n    }, [status, isAuth, navigate]) \n\n    const handlerSubmit = () => {\n\n        try {\n            dispatch(registerUser({ username, password }))\n            setUsername('')\n            setPassword('')\n        } catch(error) {console.log(error)}\n    }\n\n    return (\n        <div className='login-page'>\n            <h1 className='login-form-title'>Реєстрація</h1>\n            <form onSubmit={e => e.preventDefault()} className='login-form'>\n                <input type='text' value={username} onChange={(e) => setUsername(e.target.value)} placeholder='Бажаний логін' className='login-form-input' />\n                <input type='password' value={password} onChange={(e) => setPassword(e.target.value)} placeholder='Придумайте пароль' className='login-form-input' />\n                <div className='login-form-nav'>\n                    <button type='submit' onClick={handlerSubmit} className='btn_enter'>Реєстрація</button>\n                    <Link to='/login' className='link'>Вже зареєстровані?</Link>\n                </div>\n            </form>\n        </div>\n    \n        )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,kCAA1C;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAE9B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM;IAAEc;EAAF,IAAaT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA9B;EACA,MAAMC,MAAM,GAAGZ,WAAW,CAACC,WAAD,CAA1B;EACA,MAAMY,QAAQ,GAAGf,WAAW,EAA5B;EACA,MAAMgB,QAAQ,GAAGf,WAAW,EAA5B;EAEAH,SAAS,CAAC,MAAM;IACZ,IAAIa,MAAJ,EAAY;MACRN,KAAK,CAACM,MAAD,CAAL;IACH;;IACD,IAAIG,MAAJ,EAAY;MAAEC,QAAQ,CAAC,GAAD,CAAR;IAAe;EAChC,CALQ,EAKN,CAACJ,MAAD,EAASG,MAAT,EAAiBC,QAAjB,CALM,CAAT;;EAOA,MAAME,aAAa,GAAG,MAAM;IAExB,IAAI;MACAD,QAAQ,CAACZ,YAAY,CAAC;QAAEG,QAAF;QAAYE;MAAZ,CAAD,CAAb,CAAR;MACAD,WAAW,CAAC,EAAD,CAAX;MACAE,WAAW,CAAC,EAAD,CAAX;IACH,CAJD,CAIE,OAAMQ,KAAN,EAAa;MAACC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IAAmB;EACtC,CAPD;;EASA,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,wBACI;MAAI,SAAS,EAAC,kBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAM,QAAQ,EAAEG,CAAC,IAAIA,CAAC,CAACC,cAAF,EAArB;MAAyC,SAAS,EAAC,YAAnD;MAAA,wBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEf,QAA1B;QAAoC,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACE,MAAF,CAASC,KAAV,CAAhE;QAAkF,WAAW,EAAC,2EAA9F;QAA8G,SAAS,EAAC;MAAxH;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,UAAZ;QAAuB,KAAK,EAAEf,QAA9B;QAAwC,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAApE;QAAsF,WAAW,EAAC,mGAAlG;QAAsH,SAAS,EAAC;MAAhI;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACI;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAEP,aAA/B;UAA8C,SAAS,EAAC,WAAxD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,IAAD;UAAM,EAAE,EAAC,QAAT;UAAkB,SAAS,EAAC,MAA5B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAvCM;;GAAMX,Y;UAIUJ,W,EACJA,W,EACEF,W,EACAC,W;;;KAPRK,Y"},"metadata":{},"sourceType":"module"}