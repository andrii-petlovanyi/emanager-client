{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  posts: [],\n  popularPosts: [],\n  loading: false\n};\nexport const createPost = createAsyncThunk('post/createPost', async params => {\n  try {\n    const {\n      data\n    } = await axios.post('/posts', params);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getAllPost = createAsyncThunk('post/getAllPosts', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/posts');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const removePost = createAsyncThunk('post/removePost', async id => {\n  try {\n    const {\n      data\n    } = await axios.delete(`posts/${id}`, id);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const updatePost = createAsyncThunk('post/updatePost', async updatedPost => {\n  try {\n    const {\n      data\n    } = await axios.put(`posts/${updatedPost.id}`, updatedPost);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    //create post\n    [createPost.pending]: state => {\n      state.loading = true;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts.push(action.payload);\n    },\n    [createPost.rejected]: state => {\n      state.loading = false;\n    },\n    //Get all posts\n    [getAllPost.pending]: state => {\n      state.loading = true;\n    },\n    [getAllPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload.posts;\n    },\n    [getAllPost.rejected]: state => {\n      state.loading = false;\n    },\n    //Delete post\n    [removePost.pending]: state => {\n      state.loading = true;\n    },\n    [removePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = state.posts.filter(post => post._id !== action.payload._id);\n    },\n    [removePost.rejected]: state => {\n      state.loading = false;\n    },\n    //Edit post\n    [updatePost.pending]: state => {\n      state.loading = true;\n    },\n    [updatePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      const index = state.posts.findIndex(post => post._id == action.payload._id);\n      state.posts[index] = action.payload;\n    },\n    [updatePost.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","popularPosts","loading","createPost","params","data","post","error","console","log","getAllPost","get","removePost","id","delete","updatePost","updatedPost","put","postSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","filter","_id","index","findIndex","reducer"],"sources":["/Users/andrepetlovany/Desktop/GIT/elx/client/src/redux/features/post/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\n\nconst initialState = {\n    posts: [],\n    popularPosts: [],\n    loading: false,\n}\n\nexport const createPost = createAsyncThunk('post/createPost', async (params) => {\n    try {\n        const { data } = await axios.post('/posts', params)\n        return data\n    } catch(error) {console.log(error)}\n})\n\nexport const getAllPost = createAsyncThunk('post/getAllPosts', async () => {\n    try {\n        const { data } = await axios.get('/posts')\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n})\n\nexport const removePost = createAsyncThunk('post/removePost', async (id) => {\n    try {\n        const { data } = await axios.delete(`posts/${id}`, id)\n        return data\n    } catch (error) { console.log(error)}\n})\n\nexport const updatePost = createAsyncThunk('post/updatePost', async (updatedPost) => {\n    try {\n        const { data } = await axios.put(`posts/${updatedPost.id}`, updatedPost)\n        return data\n    } catch (error) { console.log(error)}\n})\n\nexport const postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        //create post\n        [createPost.pending]: (state) => {\n            state.loading = true\n        },\n        [createPost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts.push(action.payload)\n        },\n        [createPost.rejected]: (state) => {\n            state.loading = false\n        },\n\n        //Get all posts\n        [getAllPost.pending]: (state) => {\n            state.loading = true\n        },\n        [getAllPost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = action.payload.posts\n        },\n        [getAllPost.rejected]: (state) => {\n            state.loading = false\n        },\n\n        //Delete post\n        [removePost.pending]: (state) => {\n            state.loading = true\n        },\n        [removePost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = state.posts.filter(\n                (post) => post._id !== action.payload._id,\n            )\n        },\n        [removePost.rejected]: (state) => {\n            state.loading = false\n        },\n\n        //Edit post\n        [updatePost.pending]: (state) => {\n            state.loading = true\n        },\n        [updatePost.fulfilled]: (state, action) => {\n            state.loading = false\n            const index = state.posts.findIndex((post) => post._id == action.payload._id)\n            state.posts[index] = action.payload\n        },\n        [updatePost.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n})\n\nexport default postSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}